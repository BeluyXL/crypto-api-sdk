/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TransactionRequestRejectDataItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T13:36:32.071127Z[Etc/UTC]")
public class TransactionRequestRejectDataItem {
  public static final String SERIALIZED_NAME_BLOCKCHAIN = "blockchain";
  @SerializedName(SERIALIZED_NAME_BLOCKCHAIN)
  private String blockchain;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_REQUIRED_APPROVES = "requiredApproves";
  @SerializedName(SERIALIZED_NAME_REQUIRED_APPROVES)
  private Integer requiredApproves;

  public static final String SERIALIZED_NAME_REQUIRED_REJECTS = "requiredRejects";
  @SerializedName(SERIALIZED_NAME_REQUIRED_REJECTS)
  private Integer requiredRejects;

  public static final String SERIALIZED_NAME_CURRENT_APPROVES = "currentApproves";
  @SerializedName(SERIALIZED_NAME_CURRENT_APPROVES)
  private Integer currentApproves;

  public static final String SERIALIZED_NAME_CURRENT_REJECTS = "currentRejects";
  @SerializedName(SERIALIZED_NAME_CURRENT_REJECTS)
  private Integer currentRejects;


  public TransactionRequestRejectDataItem blockchain(String blockchain) {
    
    this.blockchain = blockchain;
    return this;
  }

   /**
   * Get blockchain
   * @return blockchain
  **/
  @ApiModelProperty(example = "bitcoin", required = true, value = "")

  public String getBlockchain() {
    return blockchain;
  }


  public void setBlockchain(String blockchain) {
    this.blockchain = blockchain;
  }


  public TransactionRequestRejectDataItem network(String network) {
    
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(example = "testnet", required = true, value = "")

  public String getNetwork() {
    return network;
  }


  public void setNetwork(String network) {
    this.network = network;
  }


  public TransactionRequestRejectDataItem requiredApproves(Integer requiredApproves) {
    
    this.requiredApproves = requiredApproves;
    return this;
  }

   /**
   * Get requiredApproves
   * @return requiredApproves
  **/
  @ApiModelProperty(example = "2", required = true, value = "")

  public Integer getRequiredApproves() {
    return requiredApproves;
  }


  public void setRequiredApproves(Integer requiredApproves) {
    this.requiredApproves = requiredApproves;
  }


  public TransactionRequestRejectDataItem requiredRejects(Integer requiredRejects) {
    
    this.requiredRejects = requiredRejects;
    return this;
  }

   /**
   * Get requiredRejects
   * @return requiredRejects
  **/
  @ApiModelProperty(example = "2", required = true, value = "")

  public Integer getRequiredRejects() {
    return requiredRejects;
  }


  public void setRequiredRejects(Integer requiredRejects) {
    this.requiredRejects = requiredRejects;
  }


  public TransactionRequestRejectDataItem currentApproves(Integer currentApproves) {
    
    this.currentApproves = currentApproves;
    return this;
  }

   /**
   * Get currentApproves
   * @return currentApproves
  **/
  @ApiModelProperty(example = "0", required = true, value = "")

  public Integer getCurrentApproves() {
    return currentApproves;
  }


  public void setCurrentApproves(Integer currentApproves) {
    this.currentApproves = currentApproves;
  }


  public TransactionRequestRejectDataItem currentRejects(Integer currentRejects) {
    
    this.currentRejects = currentRejects;
    return this;
  }

   /**
   * Get currentRejects
   * @return currentRejects
  **/
  @ApiModelProperty(example = "1", required = true, value = "")

  public Integer getCurrentRejects() {
    return currentRejects;
  }


  public void setCurrentRejects(Integer currentRejects) {
    this.currentRejects = currentRejects;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionRequestRejectDataItem transactionRequestRejectDataItem = (TransactionRequestRejectDataItem) o;
    return Objects.equals(this.blockchain, transactionRequestRejectDataItem.blockchain) &&
        Objects.equals(this.network, transactionRequestRejectDataItem.network) &&
        Objects.equals(this.requiredApproves, transactionRequestRejectDataItem.requiredApproves) &&
        Objects.equals(this.requiredRejects, transactionRequestRejectDataItem.requiredRejects) &&
        Objects.equals(this.currentApproves, transactionRequestRejectDataItem.currentApproves) &&
        Objects.equals(this.currentRejects, transactionRequestRejectDataItem.currentRejects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockchain, network, requiredApproves, requiredRejects, currentApproves, currentRejects);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionRequestRejectDataItem {\n");
    sb.append("    blockchain: ").append(toIndentedString(blockchain)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    requiredApproves: ").append(toIndentedString(requiredApproves)).append("\n");
    sb.append("    requiredRejects: ").append(toIndentedString(requiredRejects)).append("\n");
    sb.append("    currentApproves: ").append(toIndentedString(currentApproves)).append("\n");
    sb.append("    currentRejects: ").append(toIndentedString(currentRejects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

