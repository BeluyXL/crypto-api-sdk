/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.CoinsForwardingFailDataItem;

/**
 * Specifies all data, as attributes, included into the callback notification, which depends on the &#x60;event&#x60;.
 */
@ApiModel(description = "Specifies all data, as attributes, included into the callback notification, which depends on the `event`.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-22T11:18:03.645227Z[Etc/UTC]")
public class CoinsForwardingFailData {
  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private String event;

  public static final String SERIALIZED_NAME_ITEM = "item";
  @SerializedName(SERIALIZED_NAME_ITEM)
  private CoinsForwardingFailDataItem item;

  public CoinsForwardingFailData() { 
  }

  public CoinsForwardingFailData product(String product) {
    
    this.product = product;
    return this;
  }

   /**
   * Represents the Crypto APIs 2.0 product which sends the callback.
   * @return product
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "BLOCKCHAIN_AUTOMATIONS", required = true, value = "Represents the Crypto APIs 2.0 product which sends the callback.")

  public String getProduct() {
    return product;
  }


  public void setProduct(String product) {
    this.product = product;
  }


  public CoinsForwardingFailData event(String event) {
    
    this.event = event;
    return this;
  }

   /**
   * Defines the specific event, for which a callback subscription is set.
   * @return event
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "COINS_FORWARDING_FAIL", required = true, value = "Defines the specific event, for which a callback subscription is set.")

  public String getEvent() {
    return event;
  }


  public void setEvent(String event) {
    this.event = event;
  }


  public CoinsForwardingFailData item(CoinsForwardingFailDataItem item) {
    
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public CoinsForwardingFailDataItem getItem() {
    return item;
  }


  public void setItem(CoinsForwardingFailDataItem item) {
    this.item = item;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinsForwardingFailData coinsForwardingFailData = (CoinsForwardingFailData) o;
    return Objects.equals(this.product, coinsForwardingFailData.product) &&
        Objects.equals(this.event, coinsForwardingFailData.event) &&
        Objects.equals(this.item, coinsForwardingFailData.item);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, event, item);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinsForwardingFailData {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

