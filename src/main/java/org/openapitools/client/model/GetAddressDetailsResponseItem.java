/*
 * Crypto APIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.GetAddressDetailsResponseItemConfirmedBalance;
import org.openapitools.client.model.GetAddressDetailsResponseItemTotalReceived;
import org.openapitools.client.model.GetAddressDetailsResponseItemTotalSpent;

/**
 * GetAddressDetailsResponseItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-21T16:59:17.199745Z[Etc/UTC]")
public class GetAddressDetailsResponseItem {
  public static final String SERIALIZED_NAME_TRANSACTIONS_COUNT = "transactionsCount";
  @SerializedName(SERIALIZED_NAME_TRANSACTIONS_COUNT)
  private Integer transactionsCount;

  public static final String SERIALIZED_NAME_CONFIRMED_BALANCE = "confirmedBalance";
  @SerializedName(SERIALIZED_NAME_CONFIRMED_BALANCE)
  private GetAddressDetailsResponseItemConfirmedBalance confirmedBalance;

  public static final String SERIALIZED_NAME_TOTAL_RECEIVED = "totalReceived";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECEIVED)
  private GetAddressDetailsResponseItemTotalReceived totalReceived;

  public static final String SERIALIZED_NAME_TOTAL_SPENT = "totalSpent";
  @SerializedName(SERIALIZED_NAME_TOTAL_SPENT)
  private GetAddressDetailsResponseItemTotalSpent totalSpent;

  public static final String SERIALIZED_NAME_INCOMING_TRANSACTIONS_COUNT = "incomingTransactionsCount";
  @SerializedName(SERIALIZED_NAME_INCOMING_TRANSACTIONS_COUNT)
  private Integer incomingTransactionsCount;

  public static final String SERIALIZED_NAME_OUTGOING_TRANSACTIONS_COUNT = "outgoingTransactionsCount";
  @SerializedName(SERIALIZED_NAME_OUTGOING_TRANSACTIONS_COUNT)
  private Integer outgoingTransactionsCount;


  public GetAddressDetailsResponseItem transactionsCount(Integer transactionsCount) {
    
    this.transactionsCount = transactionsCount;
    return this;
  }

   /**
   * Represents the total number of confirmed coins transactions for this address, both incoming and outgoing. Applies for coins only **and not** tokens transfers e.g. for Ethereum. &#x60;transactionsCount&#x60; could result as less than incoming and outgoing transactions put together (e.g. in Bitcoin), due to the fact that one and the same address could be in senders and receivers addresses.
   * @return transactionsCount
  **/
  @ApiModelProperty(example = "3", required = true, value = "Represents the total number of confirmed coins transactions for this address, both incoming and outgoing. Applies for coins only **and not** tokens transfers e.g. for Ethereum. `transactionsCount` could result as less than incoming and outgoing transactions put together (e.g. in Bitcoin), due to the fact that one and the same address could be in senders and receivers addresses.")

  public Integer getTransactionsCount() {
    return transactionsCount;
  }


  public void setTransactionsCount(Integer transactionsCount) {
    this.transactionsCount = transactionsCount;
  }


  public GetAddressDetailsResponseItem confirmedBalance(GetAddressDetailsResponseItemConfirmedBalance confirmedBalance) {
    
    this.confirmedBalance = confirmedBalance;
    return this;
  }

   /**
   * Get confirmedBalance
   * @return confirmedBalance
  **/
  @ApiModelProperty(required = true, value = "")

  public GetAddressDetailsResponseItemConfirmedBalance getConfirmedBalance() {
    return confirmedBalance;
  }


  public void setConfirmedBalance(GetAddressDetailsResponseItemConfirmedBalance confirmedBalance) {
    this.confirmedBalance = confirmedBalance;
  }


  public GetAddressDetailsResponseItem totalReceived(GetAddressDetailsResponseItemTotalReceived totalReceived) {
    
    this.totalReceived = totalReceived;
    return this;
  }

   /**
   * Get totalReceived
   * @return totalReceived
  **/
  @ApiModelProperty(required = true, value = "")

  public GetAddressDetailsResponseItemTotalReceived getTotalReceived() {
    return totalReceived;
  }


  public void setTotalReceived(GetAddressDetailsResponseItemTotalReceived totalReceived) {
    this.totalReceived = totalReceived;
  }


  public GetAddressDetailsResponseItem totalSpent(GetAddressDetailsResponseItemTotalSpent totalSpent) {
    
    this.totalSpent = totalSpent;
    return this;
  }

   /**
   * Get totalSpent
   * @return totalSpent
  **/
  @ApiModelProperty(required = true, value = "")

  public GetAddressDetailsResponseItemTotalSpent getTotalSpent() {
    return totalSpent;
  }


  public void setTotalSpent(GetAddressDetailsResponseItemTotalSpent totalSpent) {
    this.totalSpent = totalSpent;
  }


  public GetAddressDetailsResponseItem incomingTransactionsCount(Integer incomingTransactionsCount) {
    
    this.incomingTransactionsCount = incomingTransactionsCount;
    return this;
  }

   /**
   * Defines the count of all confirmed incoming transactions from the address for coins. This applies to **coins** only, **not** to tokens transfers e.g. for Ethereum.
   * @return incomingTransactionsCount
  **/
  @ApiModelProperty(example = "2", required = true, value = "Defines the count of all confirmed incoming transactions from the address for coins. This applies to **coins** only, **not** to tokens transfers e.g. for Ethereum.")

  public Integer getIncomingTransactionsCount() {
    return incomingTransactionsCount;
  }


  public void setIncomingTransactionsCount(Integer incomingTransactionsCount) {
    this.incomingTransactionsCount = incomingTransactionsCount;
  }


  public GetAddressDetailsResponseItem outgoingTransactionsCount(Integer outgoingTransactionsCount) {
    
    this.outgoingTransactionsCount = outgoingTransactionsCount;
    return this;
  }

   /**
   * Defines the count of all confirmed outgoing transactions from the address for coins. This applies to **coins** only, **not** to tokens transfers e.g. for Ethereum.
   * @return outgoingTransactionsCount
  **/
  @ApiModelProperty(example = "1", required = true, value = "Defines the count of all confirmed outgoing transactions from the address for coins. This applies to **coins** only, **not** to tokens transfers e.g. for Ethereum.")

  public Integer getOutgoingTransactionsCount() {
    return outgoingTransactionsCount;
  }


  public void setOutgoingTransactionsCount(Integer outgoingTransactionsCount) {
    this.outgoingTransactionsCount = outgoingTransactionsCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAddressDetailsResponseItem getAddressDetailsResponseItem = (GetAddressDetailsResponseItem) o;
    return Objects.equals(this.transactionsCount, getAddressDetailsResponseItem.transactionsCount) &&
        Objects.equals(this.confirmedBalance, getAddressDetailsResponseItem.confirmedBalance) &&
        Objects.equals(this.totalReceived, getAddressDetailsResponseItem.totalReceived) &&
        Objects.equals(this.totalSpent, getAddressDetailsResponseItem.totalSpent) &&
        Objects.equals(this.incomingTransactionsCount, getAddressDetailsResponseItem.incomingTransactionsCount) &&
        Objects.equals(this.outgoingTransactionsCount, getAddressDetailsResponseItem.outgoingTransactionsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionsCount, confirmedBalance, totalReceived, totalSpent, incomingTransactionsCount, outgoingTransactionsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAddressDetailsResponseItem {\n");
    sb.append("    transactionsCount: ").append(toIndentedString(transactionsCount)).append("\n");
    sb.append("    confirmedBalance: ").append(toIndentedString(confirmedBalance)).append("\n");
    sb.append("    totalReceived: ").append(toIndentedString(totalReceived)).append("\n");
    sb.append("    totalSpent: ").append(toIndentedString(totalSpent)).append("\n");
    sb.append("    incomingTransactionsCount: ").append(toIndentedString(incomingTransactionsCount)).append("\n");
    sb.append("    outgoingTransactionsCount: ").append(toIndentedString(outgoingTransactionsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

