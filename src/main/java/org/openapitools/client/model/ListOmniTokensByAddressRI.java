/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ListOmniTokensByAddressRI
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-30T08:15:40.964553Z[Etc/UTC]")
public class ListOmniTokensByAddressRI {
  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private String balance;

  public static final String SERIALIZED_NAME_FROZEN = "frozen";
  @SerializedName(SERIALIZED_NAME_FROZEN)
  private String frozen;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTY_ID = "propertyId";
  @SerializedName(SERIALIZED_NAME_PROPERTY_ID)
  private Integer propertyId;

  public static final String SERIALIZED_NAME_RESERVED = "reserved";
  @SerializedName(SERIALIZED_NAME_RESERVED)
  private String reserved;


  public ListOmniTokensByAddressRI balance(String balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Defines the balance of the Omni tokens to send in the address.
   * @return balance
  **/
  @ApiModelProperty(example = "29", required = true, value = "Defines the balance of the Omni tokens to send in the address.")

  public String getBalance() {
    return balance;
  }


  public void setBalance(String balance) {
    this.balance = balance;
  }


  public ListOmniTokensByAddressRI frozen(String frozen) {
    
    this.frozen = frozen;
    return this;
  }

   /**
   * Defines the amount frozen by the issuer (applies to managed properties only).
   * @return frozen
  **/
  @ApiModelProperty(example = "0", required = true, value = "Defines the amount frozen by the issuer (applies to managed properties only).")

  public String getFrozen() {
    return frozen;
  }


  public void setFrozen(String frozen) {
    this.frozen = frozen;
  }


  public ListOmniTokensByAddressRI name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Defines the name of the Omni tokens to send.
   * @return name
  **/
  @ApiModelProperty(example = "Omni tokens", required = true, value = "Defines the name of the Omni tokens to send.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ListOmniTokensByAddressRI propertyId(Integer propertyId) {
    
    this.propertyId = propertyId;
    return this;
  }

   /**
   * Represents the identifier of the tokens to send.
   * @return propertyId
  **/
  @ApiModelProperty(example = "1", required = true, value = "Represents the identifier of the tokens to send.")

  public Integer getPropertyId() {
    return propertyId;
  }


  public void setPropertyId(Integer propertyId) {
    this.propertyId = propertyId;
  }


  public ListOmniTokensByAddressRI reserved(String reserved) {
    
    this.reserved = reserved;
    return this;
  }

   /**
   * Represents the amount reserved by sell offers and accepts.
   * @return reserved
  **/
  @ApiModelProperty(example = "0", required = true, value = "Represents the amount reserved by sell offers and accepts.")

  public String getReserved() {
    return reserved;
  }


  public void setReserved(String reserved) {
    this.reserved = reserved;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListOmniTokensByAddressRI listOmniTokensByAddressRI = (ListOmniTokensByAddressRI) o;
    return Objects.equals(this.balance, listOmniTokensByAddressRI.balance) &&
        Objects.equals(this.frozen, listOmniTokensByAddressRI.frozen) &&
        Objects.equals(this.name, listOmniTokensByAddressRI.name) &&
        Objects.equals(this.propertyId, listOmniTokensByAddressRI.propertyId) &&
        Objects.equals(this.reserved, listOmniTokensByAddressRI.reserved);
  }

  @Override
  public int hashCode() {
    return Objects.hash(balance, frozen, name, propertyId, reserved);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListOmniTokensByAddressRI {\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    frozen: ").append(toIndentedString(frozen)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    propertyId: ").append(toIndentedString(propertyId)).append("\n");
    sb.append("    reserved: ").append(toIndentedString(reserved)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

