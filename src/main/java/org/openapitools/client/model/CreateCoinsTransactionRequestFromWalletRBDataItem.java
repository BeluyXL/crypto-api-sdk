/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.CreateCoinsTransactionRequestFromWalletRBDataItemDestinations;

/**
 * CreateCoinsTransactionRequestFromWalletRBDataItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-20T13:36:32.071127Z[Etc/UTC]")
public class CreateCoinsTransactionRequestFromWalletRBDataItem {
  public static final String SERIALIZED_NAME_DESTINATIONS = "destinations";
  @SerializedName(SERIALIZED_NAME_DESTINATIONS)
  private List<CreateCoinsTransactionRequestFromWalletRBDataItemDestinations> destinations = new ArrayList<CreateCoinsTransactionRequestFromWalletRBDataItemDestinations>();

  /**
   * Represents the fee priority of the automation, whether it is \&quot;slow\&quot;, \&quot;standard\&quot; or \&quot;fast\&quot;.
   */
  @JsonAdapter(FeePriorityEnum.Adapter.class)
  public enum FeePriorityEnum {
    SLOW("slow"),
    
    STANDARD("standard"),
    
    FAST("fast");

    private String value;

    FeePriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FeePriorityEnum fromValue(String value) {
      for (FeePriorityEnum b : FeePriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FeePriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FeePriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FeePriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FeePriorityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FEE_PRIORITY = "feePriority";
  @SerializedName(SERIALIZED_NAME_FEE_PRIORITY)
  private FeePriorityEnum feePriority;


  public CreateCoinsTransactionRequestFromWalletRBDataItem destinations(List<CreateCoinsTransactionRequestFromWalletRBDataItemDestinations> destinations) {
    
    this.destinations = destinations;
    return this;
  }

  public CreateCoinsTransactionRequestFromWalletRBDataItem addDestinationsItem(CreateCoinsTransactionRequestFromWalletRBDataItemDestinations destinationsItem) {
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * Defines the destination of the transaction, whether it is incoming or outgoing.
   * @return destinations
  **/
  @ApiModelProperty(required = true, value = "Defines the destination of the transaction, whether it is incoming or outgoing.")

  public List<CreateCoinsTransactionRequestFromWalletRBDataItemDestinations> getDestinations() {
    return destinations;
  }


  public void setDestinations(List<CreateCoinsTransactionRequestFromWalletRBDataItemDestinations> destinations) {
    this.destinations = destinations;
  }


  public CreateCoinsTransactionRequestFromWalletRBDataItem feePriority(FeePriorityEnum feePriority) {
    
    this.feePriority = feePriority;
    return this;
  }

   /**
   * Represents the fee priority of the automation, whether it is \&quot;slow\&quot;, \&quot;standard\&quot; or \&quot;fast\&quot;.
   * @return feePriority
  **/
  @ApiModelProperty(example = "standard", required = true, value = "Represents the fee priority of the automation, whether it is \"slow\", \"standard\" or \"fast\".")

  public FeePriorityEnum getFeePriority() {
    return feePriority;
  }


  public void setFeePriority(FeePriorityEnum feePriority) {
    this.feePriority = feePriority;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCoinsTransactionRequestFromWalletRBDataItem createCoinsTransactionRequestFromWalletRBDataItem = (CreateCoinsTransactionRequestFromWalletRBDataItem) o;
    return Objects.equals(this.destinations, createCoinsTransactionRequestFromWalletRBDataItem.destinations) &&
        Objects.equals(this.feePriority, createCoinsTransactionRequestFromWalletRBDataItem.feePriority);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinations, feePriority);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCoinsTransactionRequestFromWalletRBDataItem {\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("    feePriority: ").append(toIndentedString(feePriority)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

