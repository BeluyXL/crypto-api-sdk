/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetEIP1559FeeRecommendationsRIMaxFeePerGas
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-25T12:38:09.413192Z[Etc/UTC]")
public class GetEIP1559FeeRecommendationsRIMaxFeePerGas {
  public static final String SERIALIZED_NAME_FAST = "fast";
  @SerializedName(SERIALIZED_NAME_FAST)
  private String fast;

  public static final String SERIALIZED_NAME_SLOW = "slow";
  @SerializedName(SERIALIZED_NAME_SLOW)
  private String slow;

  public static final String SERIALIZED_NAME_STANDARD = "standard";
  @SerializedName(SERIALIZED_NAME_STANDARD)
  private String standard;

  public static final String SERIALIZED_NAME_UNIT = "unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;


  public GetEIP1559FeeRecommendationsRIMaxFeePerGas fast(String fast) {
    
    this.fast = fast;
    return this;
  }

   /**
   * Represents the fast maximum fee per gas, calculated from unconfirmed transactions.
   * @return fast
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "75235090892", required = true, value = "Represents the fast maximum fee per gas, calculated from unconfirmed transactions.")

  public String getFast() {
    return fast;
  }


  public void setFast(String fast) {
    this.fast = fast;
  }


  public GetEIP1559FeeRecommendationsRIMaxFeePerGas slow(String slow) {
    
    this.slow = slow;
    return this;
  }

   /**
   * Represents the slow maximum fee per gas, calculated from unconfirmed transactions.
   * @return slow
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "67416761254", required = true, value = "Represents the slow maximum fee per gas, calculated from unconfirmed transactions.")

  public String getSlow() {
    return slow;
  }


  public void setSlow(String slow) {
    this.slow = slow;
  }


  public GetEIP1559FeeRecommendationsRIMaxFeePerGas standard(String standard) {
    
    this.standard = standard;
    return this;
  }

   /**
   * Represents the standard maximum fee per gas, calculated from unconfirmed transactions.
   * @return standard
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "69996407508", required = true, value = "Represents the standard maximum fee per gas, calculated from unconfirmed transactions.")

  public String getStandard() {
    return standard;
  }


  public void setStandard(String standard) {
    this.standard = standard;
  }


  public GetEIP1559FeeRecommendationsRIMaxFeePerGas unit(String unit) {
    
    this.unit = unit;
    return this;
  }

   /**
   * Represents the unit of the maximum fee per gas.
   * @return unit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "WEI", required = true, value = "Represents the unit of the maximum fee per gas.")

  public String getUnit() {
    return unit;
  }


  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEIP1559FeeRecommendationsRIMaxFeePerGas getEIP1559FeeRecommendationsRIMaxFeePerGas = (GetEIP1559FeeRecommendationsRIMaxFeePerGas) o;
    return Objects.equals(this.fast, getEIP1559FeeRecommendationsRIMaxFeePerGas.fast) &&
        Objects.equals(this.slow, getEIP1559FeeRecommendationsRIMaxFeePerGas.slow) &&
        Objects.equals(this.standard, getEIP1559FeeRecommendationsRIMaxFeePerGas.standard) &&
        Objects.equals(this.unit, getEIP1559FeeRecommendationsRIMaxFeePerGas.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fast, slow, standard, unit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEIP1559FeeRecommendationsRIMaxFeePerGas {\n");
    sb.append("    fast: ").append(toIndentedString(fast)).append("\n");
    sb.append("    slow: ").append(toIndentedString(slow)).append("\n");
    sb.append("    standard: ").append(toIndentedString(standard)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

