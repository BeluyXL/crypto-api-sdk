/*
 * Crypto APIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin;
import org.openapitools.client.model.ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout;

/**
 * Bitcoin
 */
@ApiModel(description = "Bitcoin")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-04-21T16:59:17.199745Z[Etc/UTC]")
public class ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin {
  public static final String SERIALIZED_NAME_LOCKTIME = "locktime";
  @SerializedName(SERIALIZED_NAME_LOCKTIME)
  private Integer locktime;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size;

  public static final String SERIALIZED_NAME_V_SIZE = "vSize";
  @SerializedName(SERIALIZED_NAME_V_SIZE)
  private Integer vSize;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_VIN = "vin";
  @SerializedName(SERIALIZED_NAME_VIN)
  private List<ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin> vin = new ArrayList<ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin>();

  public static final String SERIALIZED_NAME_VOUT = "vout";
  @SerializedName(SERIALIZED_NAME_VOUT)
  private List<ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout> vout = new ArrayList<ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout>();


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin locktime(Integer locktime) {
    
    this.locktime = locktime;
    return this;
  }

   /**
   * Represents the time at which a particular transaction can be added to the blockchain.
   * @return locktime
  **/
  @ApiModelProperty(example = "1781965", required = true, value = "Represents the time at which a particular transaction can be added to the blockchain.")

  public Integer getLocktime() {
    return locktime;
  }


  public void setLocktime(Integer locktime) {
    this.locktime = locktime;
  }


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin size(Integer size) {
    
    this.size = size;
    return this;
  }

   /**
   * Represents the total size of this transaction.
   * @return size
  **/
  @ApiModelProperty(example = "248", required = true, value = "Represents the total size of this transaction.")

  public Integer getSize() {
    return size;
  }


  public void setSize(Integer size) {
    this.size = size;
  }


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin vSize(Integer vSize) {
    
    this.vSize = vSize;
    return this;
  }

   /**
   * Represents the virtual size of this transaction.
   * @return vSize
  **/
  @ApiModelProperty(example = "166", required = true, value = "Represents the virtual size of this transaction.")

  public Integer getvSize() {
    return vSize;
  }


  public void setvSize(Integer vSize) {
    this.vSize = vSize;
  }


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Represents the transaction version number.
   * @return version
  **/
  @ApiModelProperty(example = "1", required = true, value = "Represents the transaction version number.")

  public Integer getVersion() {
    return version;
  }


  public void setVersion(Integer version) {
    this.version = version;
  }


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin vin(List<ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin> vin) {
    
    this.vin = vin;
    return this;
  }

  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin addVinItem(ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin vinItem) {
    this.vin.add(vinItem);
    return this;
  }

   /**
   * Represents the transaction inputs.
   * @return vin
  **/
  @ApiModelProperty(required = true, value = "Represents the transaction inputs.")

  public List<ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin> getVin() {
    return vin;
  }


  public void setVin(List<ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinVin> vin) {
    this.vin = vin;
  }


  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin vout(List<ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout> vout) {
    
    this.vout = vout;
    return this;
  }

  public ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin addVoutItem(ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout voutItem) {
    this.vout.add(voutItem);
    return this;
  }

   /**
   * Represents the transaction outputs.
   * @return vout
  **/
  @ApiModelProperty(required = true, value = "Represents the transaction outputs.")

  public List<ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout> getVout() {
    return vout;
  }


  public void setVout(List<ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoinVout> vout) {
    this.vout = vout;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin = (ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin) o;
    return Objects.equals(this.locktime, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.locktime) &&
        Objects.equals(this.size, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.size) &&
        Objects.equals(this.vSize, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.vSize) &&
        Objects.equals(this.version, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.version) &&
        Objects.equals(this.vin, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.vin) &&
        Objects.equals(this.vout, listTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin.vout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locktime, size, vSize, version, vin, vout);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListTransactionsByBlockHeightResponseItemBlockchainSpecificBitcoin {\n");
    sb.append("    locktime: ").append(toIndentedString(locktime)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    vSize: ").append(toIndentedString(vSize)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    vin: ").append(toIndentedString(vin)).append("\n");
    sb.append("    vout: ").append(toIndentedString(vout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

