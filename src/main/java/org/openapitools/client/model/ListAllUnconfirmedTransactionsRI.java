/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ListAllUnconfirmedTransactionsRIBS;
import org.openapitools.client.model.ListUnconfirmedTransactionsByAddressRIRecipients;
import org.openapitools.client.model.ListUnconfirmedTransactionsByAddressRISenders;

/**
 * ListAllUnconfirmedTransactionsRI
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-25T12:38:09.413192Z[Etc/UTC]")
public class ListAllUnconfirmedTransactionsRI {
  public static final String SERIALIZED_NAME_RECIPIENTS = "recipients";
  @SerializedName(SERIALIZED_NAME_RECIPIENTS)
  private List<ListUnconfirmedTransactionsByAddressRIRecipients> recipients = new ArrayList<ListUnconfirmedTransactionsByAddressRIRecipients>();

  public static final String SERIALIZED_NAME_SENDERS = "senders";
  @SerializedName(SERIALIZED_NAME_SENDERS)
  private List<ListUnconfirmedTransactionsByAddressRISenders> senders = new ArrayList<ListUnconfirmedTransactionsByAddressRISenders>();

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private Integer timestamp;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_BLOCKCHAIN_SPECIFIC = "blockchainSpecific";
  @SerializedName(SERIALIZED_NAME_BLOCKCHAIN_SPECIFIC)
  private ListAllUnconfirmedTransactionsRIBS blockchainSpecific;


  public ListAllUnconfirmedTransactionsRI recipients(List<ListUnconfirmedTransactionsByAddressRIRecipients> recipients) {
    
    this.recipients = recipients;
    return this;
  }

  public ListAllUnconfirmedTransactionsRI addRecipientsItem(ListUnconfirmedTransactionsByAddressRIRecipients recipientsItem) {
    this.recipients.add(recipientsItem);
    return this;
  }

   /**
   * Represents a list of recipient addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.
   * @return recipients
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Represents a list of recipient addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.")

  public List<ListUnconfirmedTransactionsByAddressRIRecipients> getRecipients() {
    return recipients;
  }


  public void setRecipients(List<ListUnconfirmedTransactionsByAddressRIRecipients> recipients) {
    this.recipients = recipients;
  }


  public ListAllUnconfirmedTransactionsRI senders(List<ListUnconfirmedTransactionsByAddressRISenders> senders) {
    
    this.senders = senders;
    return this;
  }

  public ListAllUnconfirmedTransactionsRI addSendersItem(ListUnconfirmedTransactionsByAddressRISenders sendersItem) {
    this.senders.add(sendersItem);
    return this;
  }

   /**
   * Represents a list of sender addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.
   * @return senders
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Represents a list of sender addresses with the respective amounts. In account-based protocols like Ethereum there is only one address in this list.")

  public List<ListUnconfirmedTransactionsByAddressRISenders> getSenders() {
    return senders;
  }


  public void setSenders(List<ListUnconfirmedTransactionsByAddressRISenders> senders) {
    this.senders = senders;
  }


  public ListAllUnconfirmedTransactionsRI timestamp(Integer timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Defines the exact date/time in Unix Timestamp when this transaction was mined, confirmed or first seen in Mempool, if it is unconfirmed.
   * @return timestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "1633518942013", required = true, value = "Defines the exact date/time in Unix Timestamp when this transaction was mined, confirmed or first seen in Mempool, if it is unconfirmed.")

  public Integer getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }


  public ListAllUnconfirmedTransactionsRI transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Represents the unique identifier of a transaction, i.e. it could be &#x60;transactionId&#x60; in UTXO-based protocols like Bitcoin, and transaction &#x60;hash&#x60; in Ethereum blockchain.
   * @return transactionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "3d74a44fe666308242b2c9dd0197a601779d17ba9fe8f7a23612c53a910bc98d", required = true, value = "Represents the unique identifier of a transaction, i.e. it could be `transactionId` in UTXO-based protocols like Bitcoin, and transaction `hash` in Ethereum blockchain.")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public ListAllUnconfirmedTransactionsRI blockchainSpecific(ListAllUnconfirmedTransactionsRIBS blockchainSpecific) {
    
    this.blockchainSpecific = blockchainSpecific;
    return this;
  }

   /**
   * Get blockchainSpecific
   * @return blockchainSpecific
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public ListAllUnconfirmedTransactionsRIBS getBlockchainSpecific() {
    return blockchainSpecific;
  }


  public void setBlockchainSpecific(ListAllUnconfirmedTransactionsRIBS blockchainSpecific) {
    this.blockchainSpecific = blockchainSpecific;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListAllUnconfirmedTransactionsRI listAllUnconfirmedTransactionsRI = (ListAllUnconfirmedTransactionsRI) o;
    return Objects.equals(this.recipients, listAllUnconfirmedTransactionsRI.recipients) &&
        Objects.equals(this.senders, listAllUnconfirmedTransactionsRI.senders) &&
        Objects.equals(this.timestamp, listAllUnconfirmedTransactionsRI.timestamp) &&
        Objects.equals(this.transactionId, listAllUnconfirmedTransactionsRI.transactionId) &&
        Objects.equals(this.blockchainSpecific, listAllUnconfirmedTransactionsRI.blockchainSpecific);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipients, senders, timestamp, transactionId, blockchainSpecific);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListAllUnconfirmedTransactionsRI {\n");
    sb.append("    recipients: ").append(toIndentedString(recipients)).append("\n");
    sb.append("    senders: ").append(toIndentedString(senders)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    blockchainSpecific: ").append(toIndentedString(blockchainSpecific)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

