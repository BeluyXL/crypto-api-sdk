/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import io.cryptoapis.sdk.ApiException;
import org.openapitools.client.model.BlockchainDataBlockNotFound;
import org.openapitools.client.model.BlockchainDataTransactionNotFound;
import org.openapitools.client.model.FeatureMainnetsNotAllowedForPlan;
import org.openapitools.client.model.GetLatestMinedZilliqaBlockR;
import org.openapitools.client.model.GetZilliqaAddressDetailsR;
import org.openapitools.client.model.GetZilliqaBlockDetailsByBlockHashR;
import org.openapitools.client.model.GetZilliqaBlockDetailsByBlockHeightR;
import org.openapitools.client.model.GetZilliqaTransactionDetailsByTransactionIDR;
import org.openapitools.client.model.InsufficientCredits;
import org.openapitools.client.model.InvalidApiKey;
import org.openapitools.client.model.InvalidData;
import org.openapitools.client.model.InvalidPagination;
import org.openapitools.client.model.InvalidRequestBodyStructure;
import org.openapitools.client.model.ListZilliqaTransactionsByAddressR;
import org.openapitools.client.model.ListZilliqaTransactionsByBlockHashR;
import org.openapitools.client.model.ListZilliqaTransactionsByBlockHeightR;
import org.openapitools.client.model.RequestLimitReached;
import org.openapitools.client.model.UnexpectedServerError;
import org.openapitools.client.model.UnsupportedMediaType;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ZilliqaApi
 */
@Ignore
public class ZilliqaApiTest {

    private final ZilliqaApi api = new ZilliqaApi();

    
    /**
     * Get Latest Mined Zilliqa Block
     *
     * Through this endpoint users can obtain information on the latest block that has been mined on the Zilliqa blockchain. Data could include the current and previous block hashes, transaction count, and more.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLatestMinedZilliqaBlockTest() throws ApiException {
        String network = null;
        String context = null;
        GetLatestMinedZilliqaBlockR response = api.getLatestMinedZilliqaBlock(network, context);

        // TODO: test validations
    }
    
    /**
     * Get Zilliqa Address Details
     *
     * Through this endpoint customers can obtain information address details from the Zilliqa blockchain.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZilliqaAddressDetailsTest() throws ApiException {
        String network = null;
        String address = null;
        String context = null;
        GetZilliqaAddressDetailsR response = api.getZilliqaAddressDetails(network, address, context);

        // TODO: test validations
    }
    
    /**
     * Get Zilliqa Block Details By Block Hash
     *
     * Through this endpoint customers can obtain block details from the Zilliqa blockchain by providing the block Hash parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZilliqaBlockDetailsByBlockHashTest() throws ApiException {
        String network = null;
        String blockHash = null;
        String context = null;
        GetZilliqaBlockDetailsByBlockHashR response = api.getZilliqaBlockDetailsByBlockHash(network, blockHash, context);

        // TODO: test validations
    }
    
    /**
     * Get Zilliqa Block Details By Block Height
     *
     * Through this endpoint customers can obtain block details from the Zilliqa blockchain by providing the block Height parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZilliqaBlockDetailsByBlockHeightTest() throws ApiException {
        String network = null;
        Integer blockHeight = null;
        String context = null;
        GetZilliqaBlockDetailsByBlockHeightR response = api.getZilliqaBlockDetailsByBlockHeight(network, blockHeight, context);

        // TODO: test validations
    }
    
    /**
     * Get Zilliqa Transaction Details by Transaction ID
     *
     * Through this endpoint customers can obtain transaction details on the Zilliqa blockchain by providing a Transaction ID parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZilliqaTransactionDetailsByTransactionIDTest() throws ApiException {
        String network = null;
        String transactionHash = null;
        String context = null;
        GetZilliqaTransactionDetailsByTransactionIDR response = api.getZilliqaTransactionDetailsByTransactionID(network, transactionHash, context);

        // TODO: test validations
    }
    
    /**
     * List Zilliqa Transactions by Address
     *
     * Through this endpoint customers can list transactions on the Zilliqa blockchain by the address parameter.    {note}Please note that listing data from the same type will apply pagination on the results.{/note}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listZilliqaTransactionsByAddressTest() throws ApiException {
        String network = null;
        String address = null;
        String context = null;
        Integer limit = null;
        Integer offset = null;
        ListZilliqaTransactionsByAddressR response = api.listZilliqaTransactionsByAddress(network, address, context, limit, offset);

        // TODO: test validations
    }
    
    /**
     * List Zilliqa Transactions By Block Hash
     *
     * Through this endpoint customers can list transactions on the Zilliqa blockchain by the block hash parameter.    {note}Please note that listing data from the same type will apply pagination on the results.{/note}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listZilliqaTransactionsByBlockHashTest() throws ApiException {
        String network = null;
        String blockHash = null;
        String context = null;
        Integer limit = null;
        Integer offset = null;
        ListZilliqaTransactionsByBlockHashR response = api.listZilliqaTransactionsByBlockHash(network, blockHash, context, limit, offset);

        // TODO: test validations
    }
    
    /**
     * List Zilliqa Transactions By Block Height
     *
     * Through this endpoint customers can list transactions on the Zilliqa blockchain by the block height parameter.    {note}Please note that listing data from the same type will apply pagination on the results.{/note}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listZilliqaTransactionsByBlockHeightTest() throws ApiException {
        String network = null;
        Integer blockHeight = null;
        String context = null;
        Integer limit = null;
        Integer offset = null;
        ListZilliqaTransactionsByBlockHeightR response = api.listZilliqaTransactionsByBlockHeight(network, blockHeight, context, limit, offset);

        // TODO: test validations
    }
    
}
