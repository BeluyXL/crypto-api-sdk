/*
 * Crypto APIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: bizdev@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AlreadyExists;
import org.openapitools.client.model.FeatureMainnetsNotAllowedForPlan;
import org.openapitools.client.model.GetHDWalletxPubYPubZPubDetailsResponse;
import org.openapitools.client.model.InsufficientCredits;
import org.openapitools.client.model.InvalidApiKey;
import org.openapitools.client.model.InvalidData;
import org.openapitools.client.model.InvalidXpub;
import org.openapitools.client.model.ListHDWalletxPubYPubZPubTransactionsResponse;
import org.openapitools.client.model.RequestLimitReached;
import org.openapitools.client.model.SyncHDWalletxPubYPubZPubRequestBody;
import org.openapitools.client.model.SyncHDWalletxPubYPubZPubResponse;
import org.openapitools.client.model.UnexpectedServerError;
import org.openapitools.client.model.UnsupportedMediaType;
import org.openapitools.client.model.XpubNotSynced;
import org.openapitools.client.model.XpubSyncInProgress;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UtxoBasedApi
 */
@Ignore
public class UtxoBasedApiTest {

    private final UtxoBasedApi api = new UtxoBasedApi();

    
    /**
     * Get HD Wallet (xPub, yPub, zPub) Details
     *
     * HD wallet details is useful endpoint to get the most important data about HD wallet without the need to do a lot of calculations, once the HD Wallet is synced using Sync endpoint we keep it up to date and we calculate these details in advance.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHDWalletXPubYPubZPubDetailsTest() throws ApiException {
        String blockchain = null;
        String extendedPublicKey = null;
        String network = null;
        String context = null;
        String derivation = null;
        GetHDWalletxPubYPubZPubDetailsResponse response = api.getHDWalletXPubYPubZPubDetails(blockchain, extendedPublicKey, network, context, derivation);

        // TODO: test validations
    }
    
    /**
     * List HD Wallet (xPub, yPub, zPub) Transactions
     *
     * This endpoint will list HD Wallet transactions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listHDWalletXPubYPubZPubTransactionsTest() throws ApiException {
        String blockchain = null;
        String extendedPublicKey = null;
        String network = null;
        String context = null;
        String derivation = null;
        Integer limit = null;
        Integer offset = null;
        ListHDWalletxPubYPubZPubTransactionsResponse response = api.listHDWalletXPubYPubZPubTransactions(blockchain, extendedPublicKey, network, context, derivation, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Sync HD Wallet (xPub, yPub, zPub)
     *
     * HD wallets usually have a lot of addresses and transactions, getting the data on demand is a heavy operation. That&#39;s why we have created this feature, to be able to get HD wallet details or transactions this HD wallet must be synced first. In addition to the initial sync we keep updating the synced HD wallets all the time.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void syncHDWalletXPubYPubZPubTest() throws ApiException {
        String blockchain = null;
        String network = null;
        String context = null;
        SyncHDWalletxPubYPubZPubRequestBody syncHDWalletxPubYPubZPubRequestBody = null;
        SyncHDWalletxPubYPubZPubResponse response = api.syncHDWalletXPubYPubZPub(blockchain, network, context, syncHDWalletxPubYPubZPubRequestBody);

        // TODO: test validations
    }
    
}
