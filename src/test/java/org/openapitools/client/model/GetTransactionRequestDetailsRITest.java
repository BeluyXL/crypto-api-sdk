/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetTransactionRequestDetailsRIRecipients;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetTransactionRequestDetailsRI
 */
public class GetTransactionRequestDetailsRITest {
    private final GetTransactionRequestDetailsRI model = new GetTransactionRequestDetailsRI();

    /**
     * Model tests for GetTransactionRequestDetailsRI
     */
    @Test
    public void testGetTransactionRequestDetailsRI() {
        // TODO: test GetTransactionRequestDetailsRI
    }

    /**
     * Test the property 'additionalDetails'
     */
    @Test
    public void additionalDetailsTest() {
        // TODO: test additionalDetails
    }

    /**
     * Test the property 'blockchain'
     */
    @Test
    public void blockchainTest() {
        // TODO: test blockchain
    }

    /**
     * Test the property 'feePriority'
     */
    @Test
    public void feePriorityTest() {
        // TODO: test feePriority
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'totalTransactionAmount'
     */
    @Test
    public void totalTransactionAmountTest() {
        // TODO: test totalTransactionAmount
    }

    /**
     * Test the property 'transactionId'
     */
    @Test
    public void transactionIdTest() {
        // TODO: test transactionId
    }

    /**
     * Test the property 'transactionRequestStatus'
     */
    @Test
    public void transactionRequestStatusTest() {
        // TODO: test transactionRequestStatus
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    public void walletIdTest() {
        // TODO: test walletId
    }

}
