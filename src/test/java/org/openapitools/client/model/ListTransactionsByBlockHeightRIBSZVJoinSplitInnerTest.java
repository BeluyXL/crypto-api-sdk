/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ListTransactionsByBlockHeightRIBSZVJoinSplitInner
 */
public class ListTransactionsByBlockHeightRIBSZVJoinSplitInnerTest {
    private final ListTransactionsByBlockHeightRIBSZVJoinSplitInner model = new ListTransactionsByBlockHeightRIBSZVJoinSplitInner();

    /**
     * Model tests for ListTransactionsByBlockHeightRIBSZVJoinSplitInner
     */
    @Test
    public void testListTransactionsByBlockHeightRIBSZVJoinSplitInner() {
        // TODO: test ListTransactionsByBlockHeightRIBSZVJoinSplitInner
    }

    /**
     * Test the property 'anchor'
     */
    @Test
    public void anchorTest() {
        // TODO: test anchor
    }

    /**
     * Test the property 'cipherTexts'
     */
    @Test
    public void cipherTextsTest() {
        // TODO: test cipherTexts
    }

    /**
     * Test the property 'commitments'
     */
    @Test
    public void commitmentsTest() {
        // TODO: test commitments
    }

    /**
     * Test the property 'macs'
     */
    @Test
    public void macsTest() {
        // TODO: test macs
    }

    /**
     * Test the property 'nullifiers'
     */
    @Test
    public void nullifiersTest() {
        // TODO: test nullifiers
    }

    /**
     * Test the property 'oneTimePubKey'
     */
    @Test
    public void oneTimePubKeyTest() {
        // TODO: test oneTimePubKey
    }

    /**
     * Test the property 'proof'
     */
    @Test
    public void proofTest() {
        // TODO: test proof
    }

    /**
     * Test the property 'randomSeed'
     */
    @Test
    public void randomSeedTest() {
        // TODO: test randomSeed
    }

    /**
     * Test the property 'vPubNew'
     */
    @Test
    public void vPubNewTest() {
        // TODO: test vPubNew
    }

    /**
     * Test the property 'vPubOld'
     */
    @Test
    public void vPubOldTest() {
        // TODO: test vPubOld
    }

}
