/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for AddressTokensTransactionConfirmedEachConfirmationOmni
 */
public class AddressTokensTransactionConfirmedEachConfirmationOmniTest {
    private final AddressTokensTransactionConfirmedEachConfirmationOmni model = new AddressTokensTransactionConfirmedEachConfirmationOmni();

    /**
     * Model tests for AddressTokensTransactionConfirmedEachConfirmationOmni
     */
    @Test
    public void testAddressTokensTransactionConfirmedEachConfirmationOmni() {
        // TODO: test AddressTokensTransactionConfirmedEachConfirmationOmni
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'propertyId'
     */
    @Test
    public void propertyIdTest() {
        // TODO: test propertyId
    }

    /**
     * Test the property 'transactionType'
     */
    @Test
    public void transactionTypeTest() {
        // TODO: test transactionType
    }

    /**
     * Test the property 'createdByTransactionId'
     */
    @Test
    public void createdByTransactionIdTest() {
        // TODO: test createdByTransactionId
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

}
