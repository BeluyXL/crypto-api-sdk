/*
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetZilliqaBlockDetailsByBlockHashRI
 */
public class GetZilliqaBlockDetailsByBlockHashRITest {
    private final GetZilliqaBlockDetailsByBlockHashRI model = new GetZilliqaBlockDetailsByBlockHashRI();

    /**
     * Model tests for GetZilliqaBlockDetailsByBlockHashRI
     */
    @Test
    public void testGetZilliqaBlockDetailsByBlockHashRI() {
        // TODO: test GetZilliqaBlockDetailsByBlockHashRI
    }

    /**
     * Test the property 'blockHeight'
     */
    @Test
    public void blockHeightTest() {
        // TODO: test blockHeight
    }

    /**
     * Test the property 'difficulty'
     */
    @Test
    public void difficultyTest() {
        // TODO: test difficulty
    }

    /**
     * Test the property 'dsBlock'
     */
    @Test
    public void dsBlockTest() {
        // TODO: test dsBlock
    }

    /**
     * Test the property 'dsDifficulty'
     */
    @Test
    public void dsDifficultyTest() {
        // TODO: test dsDifficulty
    }

    /**
     * Test the property 'dsLeader'
     */
    @Test
    public void dsLeaderTest() {
        // TODO: test dsLeader
    }

    /**
     * Test the property 'gasLimit'
     */
    @Test
    public void gasLimitTest() {
        // TODO: test gasLimit
    }

    /**
     * Test the property 'gasUsed'
     */
    @Test
    public void gasUsedTest() {
        // TODO: test gasUsed
    }

    /**
     * Test the property 'microBlocks'
     */
    @Test
    public void microBlocksTest() {
        // TODO: test microBlocks
    }

    /**
     * Test the property 'nextBlockHash'
     */
    @Test
    public void nextBlockHashTest() {
        // TODO: test nextBlockHash
    }

    /**
     * Test the property 'previousBlockHash'
     */
    @Test
    public void previousBlockHashTest() {
        // TODO: test previousBlockHash
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'transactionsCount'
     */
    @Test
    public void transactionsCountTest() {
        // TODO: test transactionsCount
    }

}
