/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.CreateAutomaticTokensForwardingRITS;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CreateAutomaticTokensForwardingRI
 */
public class CreateAutomaticTokensForwardingRITest {
    private final CreateAutomaticTokensForwardingRI model = new CreateAutomaticTokensForwardingRI();

    /**
     * Model tests for CreateAutomaticTokensForwardingRI
     */
    @Test
    public void testCreateAutomaticTokensForwardingRI() {
        // TODO: test CreateAutomaticTokensForwardingRI
    }

    /**
     * Test the property 'callbackUrl'
     */
    @Test
    public void callbackUrlTest() {
        // TODO: test callbackUrl
    }

    /**
     * Test the property 'confirmationsCount'
     */
    @Test
    public void confirmationsCountTest() {
        // TODO: test confirmationsCount
    }

    /**
     * Test the property 'createdTimestamp'
     */
    @Test
    public void createdTimestampTest() {
        // TODO: test createdTimestamp
    }

    /**
     * Test the property 'feeAddress'
     */
    @Test
    public void feeAddressTest() {
        // TODO: test feeAddress
    }

    /**
     * Test the property 'feePriority'
     */
    @Test
    public void feePriorityTest() {
        // TODO: test feePriority
    }

    /**
     * Test the property 'fromAddress'
     */
    @Test
    public void fromAddressTest() {
        // TODO: test fromAddress
    }

    /**
     * Test the property 'minimumTransferAmount'
     */
    @Test
    public void minimumTransferAmountTest() {
        // TODO: test minimumTransferAmount
    }

    /**
     * Test the property 'referenceId'
     */
    @Test
    public void referenceIdTest() {
        // TODO: test referenceId
    }

    /**
     * Test the property 'toAddress'
     */
    @Test
    public void toAddressTest() {
        // TODO: test toAddress
    }

    /**
     * Test the property 'tokenData'
     */
    @Test
    public void tokenDataTest() {
        // TODO: test tokenData
    }

}
