/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ListAllAssetsFromAllWalletsRICoins;
import org.openapitools.client.model.ListAllAssetsFromAllWalletsRIFungibleTokens;
import org.openapitools.client.model.ListAllAssetsFromAllWalletsRINonFungibleTokens;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ListAllAssetsByWalletIDRI
 */
public class ListAllAssetsByWalletIDRITest {
    private final ListAllAssetsByWalletIDRI model = new ListAllAssetsByWalletIDRI();

    /**
     * Model tests for ListAllAssetsByWalletIDRI
     */
    @Test
    public void testListAllAssetsByWalletIDRI() {
        // TODO: test ListAllAssetsByWalletIDRI
    }

    /**
     * Test the property 'coins'
     */
    @Test
    public void coinsTest() {
        // TODO: test coins
    }

    /**
     * Test the property 'fungibleTokens'
     */
    @Test
    public void fungibleTokensTest() {
        // TODO: test fungibleTokens
    }

    /**
     * Test the property 'nonFungibleTokens'
     */
    @Test
    public void nonFungibleTokensTest() {
        // TODO: test nonFungibleTokens
    }

    /**
     * Test the property 'walletId'
     */
    @Test
    public void walletIdTest() {
        // TODO: test walletId
    }

    /**
     * Test the property 'walletName'
     */
    @Test
    public void walletNameTest() {
        // TODO: test walletName
    }

}
