/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDRIBSLScriptSig;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for GetTransactionDetailsByTransactionIDRIBSLVin
 */
public class GetTransactionDetailsByTransactionIDRIBSLVinTest {
    private final GetTransactionDetailsByTransactionIDRIBSLVin model = new GetTransactionDetailsByTransactionIDRIBSLVin();

    /**
     * Model tests for GetTransactionDetailsByTransactionIDRIBSLVin
     */
    @Test
    public void testGetTransactionDetailsByTransactionIDRIBSLVin() {
        // TODO: test GetTransactionDetailsByTransactionIDRIBSLVin
    }

    /**
     * Test the property 'addresses'
     */
    @Test
    public void addressesTest() {
        // TODO: test addresses
    }

    /**
     * Test the property 'coinbase'
     */
    @Test
    public void coinbaseTest() {
        // TODO: test coinbase
    }

    /**
     * Test the property 'scriptSig'
     */
    @Test
    public void scriptSigTest() {
        // TODO: test scriptSig
    }

    /**
     * Test the property 'sequence'
     */
    @Test
    public void sequenceTest() {
        // TODO: test sequence
    }

    /**
     * Test the property 'txid'
     */
    @Test
    public void txidTest() {
        // TODO: test txid
    }

    /**
     * Test the property 'txinwitness'
     */
    @Test
    public void txinwitnessTest() {
        // TODO: test txinwitness
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'vout'
     */
    @Test
    public void voutTest() {
        // TODO: test vout
    }

}
