/*
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.DecodeRawTransactionHexRISZVinInner;
import org.openapitools.client.model.DecodeRawTransactionHexRISZVoutInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for DecodeRawTransactionHexRISZ
 */
public class DecodeRawTransactionHexRISZTest {
    private final DecodeRawTransactionHexRISZ model = new DecodeRawTransactionHexRISZ();

    /**
     * Model tests for DecodeRawTransactionHexRISZ
     */
    @Test
    public void testDecodeRawTransactionHexRISZ() {
        // TODO: test DecodeRawTransactionHexRISZ
    }

    /**
     * Test the property 'expiryHeight'
     */
    @Test
    public void expiryHeightTest() {
        // TODO: test expiryHeight
    }

    /**
     * Test the property 'locktime'
     */
    @Test
    public void locktimeTest() {
        // TODO: test locktime
    }

    /**
     * Test the property 'overwintered'
     */
    @Test
    public void overwinteredTest() {
        // TODO: test overwintered
    }

    /**
     * Test the property 'saplinged'
     */
    @Test
    public void saplingedTest() {
        // TODO: test saplinged
    }

    /**
     * Test the property 'transactionHash'
     */
    @Test
    public void transactionHashTest() {
        // TODO: test transactionHash
    }

    /**
     * Test the property 'valueBalance'
     */
    @Test
    public void valueBalanceTest() {
        // TODO: test valueBalance
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'versionGroupId'
     */
    @Test
    public void versionGroupIdTest() {
        // TODO: test versionGroupId
    }

    /**
     * Test the property 'vin'
     */
    @Test
    public void vinTest() {
        // TODO: test vin
    }

    /**
     * Test the property 'vout'
     */
    @Test
    public void voutTest() {
        // TODO: test vout
    }

}
