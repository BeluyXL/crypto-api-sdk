/*
 * CryptoAPIs
 * Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.TokensForwardingSuccessToken;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for TokensForwardingSuccessDataItem
 */
public class TokensForwardingSuccessDataItemTest {
    private final TokensForwardingSuccessDataItem model = new TokensForwardingSuccessDataItem();

    /**
     * Model tests for TokensForwardingSuccessDataItem
     */
    @Test
    public void testTokensForwardingSuccessDataItem() {
        // TODO: test TokensForwardingSuccessDataItem
    }

    /**
     * Test the property 'blockchain'
     */
    @Test
    public void blockchainTest() {
        // TODO: test blockchain
    }

    /**
     * Test the property 'network'
     */
    @Test
    public void networkTest() {
        // TODO: test network
    }

    /**
     * Test the property 'fromAddress'
     */
    @Test
    public void fromAddressTest() {
        // TODO: test fromAddress
    }

    /**
     * Test the property 'toAddress'
     */
    @Test
    public void toAddressTest() {
        // TODO: test toAddress
    }

    /**
     * Test the property 'spentFeesAmount'
     */
    @Test
    public void spentFeesAmountTest() {
        // TODO: test spentFeesAmount
    }

    /**
     * Test the property 'spentFeesUnit'
     */
    @Test
    public void spentFeesUnitTest() {
        // TODO: test spentFeesUnit
    }

    /**
     * Test the property 'triggerTransactionId'
     */
    @Test
    public void triggerTransactionIdTest() {
        // TODO: test triggerTransactionId
    }

    /**
     * Test the property 'forwardingTransactionId'
     */
    @Test
    public void forwardingTransactionIdTest() {
        // TODO: test forwardingTransactionId
    }

    /**
     * Test the property 'tokenType'
     */
    @Test
    public void tokenTypeTest() {
        // TODO: test tokenType
    }

    /**
     * Test the property 'token'
     */
    @Test
    public void tokenTest() {
        // TODO: test token
    }

}
