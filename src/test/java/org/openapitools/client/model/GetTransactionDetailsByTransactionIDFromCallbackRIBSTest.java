/*
 * CryptoAPIs
 * Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.
 *
 * The version of the OpenAPI document: 2021-03-20
 * Contact: developers@cryptoapis.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSB;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSBC;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSBSC;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSD;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSD2;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSE;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSEC;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSL;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSP;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBST;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSTBandwidthUsed;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSTEnergyUsed;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSX;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSXValue;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSZ;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSZ2;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDFromCallbackRIBSZVoutInner;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDRIBSZVJoinSplitInner;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDRIBSZVShieldedOutputInner;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDRIBSZVShieldedSpendInner;
import org.openapitools.client.model.GetTransactionDetailsByTransactionIDRIBSZVinInner;
import org.openapitools.client.model.GetXRPRippleTransactionDetailsByTransactionIDRIOffer;
import org.openapitools.client.model.GetXRPRippleTransactionDetailsByTransactionIDRIReceive;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetTransactionDetailsByTransactionIDFromCallbackRIBS
 */
public class GetTransactionDetailsByTransactionIDFromCallbackRIBSTest {
    private final GetTransactionDetailsByTransactionIDFromCallbackRIBS model = new GetTransactionDetailsByTransactionIDFromCallbackRIBS();

    /**
     * Model tests for GetTransactionDetailsByTransactionIDFromCallbackRIBS
     */
    @Test
    public void testGetTransactionDetailsByTransactionIDFromCallbackRIBS() {
        // TODO: test GetTransactionDetailsByTransactionIDFromCallbackRIBS
    }

    /**
     * Test the property 'locktime'
     */
    @Test
    public void locktimeTest() {
        // TODO: test locktime
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'vSize'
     */
    @Test
    public void vSizeTest() {
        // TODO: test vSize
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'vin'
     */
    @Test
    public void vinTest() {
        // TODO: test vin
    }

    /**
     * Test the property 'vout'
     */
    @Test
    public void voutTest() {
        // TODO: test vout
    }

    /**
     * Test the property 'contract'
     */
    @Test
    public void contractTest() {
        // TODO: test contract
    }

    /**
     * Test the property 'gasLimit'
     */
    @Test
    public void gasLimitTest() {
        // TODO: test gasLimit
    }

    /**
     * Test the property 'gasPrice'
     */
    @Test
    public void gasPriceTest() {
        // TODO: test gasPrice
    }

    /**
     * Test the property 'gasUsed'
     */
    @Test
    public void gasUsedTest() {
        // TODO: test gasUsed
    }

    /**
     * Test the property 'inputData'
     */
    @Test
    public void inputDataTest() {
        // TODO: test inputData
    }

    /**
     * Test the property 'nonce'
     */
    @Test
    public void nonceTest() {
        // TODO: test nonce
    }

    /**
     * Test the property 'transactionStatus'
     */
    @Test
    public void transactionStatusTest() {
        // TODO: test transactionStatus
    }

    /**
     * Test the property 'bindingSig'
     */
    @Test
    public void bindingSigTest() {
        // TODO: test bindingSig
    }

    /**
     * Test the property 'expiryHeight'
     */
    @Test
    public void expiryHeightTest() {
        // TODO: test expiryHeight
    }

    /**
     * Test the property 'joinSplitPubKey'
     */
    @Test
    public void joinSplitPubKeyTest() {
        // TODO: test joinSplitPubKey
    }

    /**
     * Test the property 'joinSplitSig'
     */
    @Test
    public void joinSplitSigTest() {
        // TODO: test joinSplitSig
    }

    /**
     * Test the property 'overwintered'
     */
    @Test
    public void overwinteredTest() {
        // TODO: test overwintered
    }

    /**
     * Test the property 'vJoinSplit'
     */
    @Test
    public void vJoinSplitTest() {
        // TODO: test vJoinSplit
    }

    /**
     * Test the property 'vShieldedOutput'
     */
    @Test
    public void vShieldedOutputTest() {
        // TODO: test vShieldedOutput
    }

    /**
     * Test the property 'vShieldedSpend'
     */
    @Test
    public void vShieldedSpendTest() {
        // TODO: test vShieldedSpend
    }

    /**
     * Test the property 'valueBalance'
     */
    @Test
    public void valueBalanceTest() {
        // TODO: test valueBalance
    }

    /**
     * Test the property 'versionGroupId'
     */
    @Test
    public void versionGroupIdTest() {
        // TODO: test versionGroupId
    }

    /**
     * Test the property 'additionalData'
     */
    @Test
    public void additionalDataTest() {
        // TODO: test additionalData
    }

    /**
     * Test the property 'destinationTag'
     */
    @Test
    public void destinationTagTest() {
        // TODO: test destinationTag
    }

    /**
     * Test the property 'offer'
     */
    @Test
    public void offerTest() {
        // TODO: test offer
    }

    /**
     * Test the property 'receive'
     */
    @Test
    public void receiveTest() {
        // TODO: test receive
    }

    /**
     * Test the property 'sequence'
     */
    @Test
    public void sequenceTest() {
        // TODO: test sequence
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'value'
     */
    @Test
    public void valueTest() {
        // TODO: test value
    }

    /**
     * Test the property 'amount'
     */
    @Test
    public void amountTest() {
        // TODO: test amount
    }

    /**
     * Test the property 'bandwidthUsed'
     */
    @Test
    public void bandwidthUsedTest() {
        // TODO: test bandwidthUsed
    }

    /**
     * Test the property 'energyUsed'
     */
    @Test
    public void energyUsedTest() {
        // TODO: test energyUsed
    }

    /**
     * Test the property 'hasInternalTransactions'
     */
    @Test
    public void hasInternalTransactionsTest() {
        // TODO: test hasInternalTransactions
    }

    /**
     * Test the property 'hasTokenTransfers'
     */
    @Test
    public void hasTokenTransfersTest() {
        // TODO: test hasTokenTransfers
    }

    /**
     * Test the property 'input'
     */
    @Test
    public void inputTest() {
        // TODO: test input
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'senders'
     */
    @Test
    public void sendersTest() {
        // TODO: test senders
    }

    /**
     * Test the property 'gas'
     */
    @Test
    public void gasTest() {
        // TODO: test gas
    }

    /**
     * Test the property 'txid'
     */
    @Test
    public void txidTest() {
        // TODO: test txid
    }

}
